#!/bin/bash

# Configura√ß√µes para um script mais robusto
set -euo pipefail

echo "---------------------------------------------------------------------"
echo "üöÄ Iniciando a instala√ß√£o e configura√ß√£o do Docker e Watchdog..."
echo "---------------------------------------------------------------------"

# Fun√ß√£o para verificar se um comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# 1. Atualizar lista de pacotes (se n√£o foi feito recentemente por outro script)
# Se o 'essentials.sh' sempre rodar antes, esta linha pode ser opcional aqui.
echo "üîÑ Atualizando lista de pacotes do DNF (pode ser r√°pido se j√° atualizado)..."
sudo dnf makecache -q

# 2. Garantir depend√™ncias para adicionar reposit√≥rios
# Muitos destes j√° devem ter sido instalados pelo 'essentials.sh' melhorado.
echo "üõ†Ô∏è  Garantindo depend√™ncias para reposit√≥rios (ca-certificates, curl, gnupg2, redhat-lsb-core)..."
sudo dnf install -y ca-certificates curl gnupg2 lsb_release

# 3. Instalar Docker Engine
if command_exists docker; then
    CURRENT_DOCKER_VERSION=$(docker --version)
    echo "‚úÖ Docker j√° parece estar instalado. Vers√£o: ${CURRENT_DOCKER_VERSION}"
else
    echo "üîß Instalando Docker Engine..."
    # Adicionar reposit√≥rio Docker CE para CentOS
    echo "   Configurando o reposit√≥rio do Docker..."
    sudo dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    # Instalar Docker CE, CLI, Containerd, Buildx e Docker Compose plugin
    echo "   Instalando Docker CE, CLI, Containerd, Buildx e Docker Compose plugin..."
    sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    echo "‚úÖ Docker Engine instalado com sucesso."
    docker --version
fi

# 4. Adicionar usu√°rio 'vagrant' ao grupo 'docker'
# Isso permite executar comandos docker sem sudo.
TARGET_USER="vagrant" # Usu√°rio padr√£o do Vagrant
if groups "${TARGET_USER}" | grep -q -w "docker"; then
    echo "‚úÖ Usu√°rio '${TARGET_USER}' j√° pertence ao grupo 'docker'."
else
    echo "‚ûï Adicionando usu√°rio '${TARGET_USER}' ao grupo 'docker'..."
    sudo usermod -aG docker "${TARGET_USER}"
    echo "   ‚ÄºÔ∏è  AVISO IMPORTANTE: O usu√°rio '${TARGET_USER}' precisar√° fazer logout e login novamente"
    echo "   (ou a VM ser reiniciada/nova sess√£o SSH iniciada) para que a altera√ß√£o de grupo tenha efeito."
    echo "   Em um provisionamento Vagrant, isso geralmente significa que o grupo estar√° ativo na pr√≥xima vez que voc√™ fizer 'vagrant ssh',"
    echo "   ou se voc√™ usar 'su - ${TARGET_USER}' dentro de um script para simular um novo login."
fi

# 5. Habilitar e iniciar o servi√ßo Docker (systemd)
echo "üê≥ Habilitando e iniciando o servi√ßo Docker..."
if ! sudo systemctl is-enabled --quiet docker.service; then
    sudo systemctl enable docker.service
    echo "   Servi√ßo Docker habilitado."
else
    echo "   Servi√ßo Docker j√° estava habilitado."
fi

if ! sudo systemctl is-active --quiet docker.service; then
    sudo systemctl start docker.service
    echo "   Servi√ßo Docker iniciado."
else
    echo "   Servi√ßo Docker j√° estava ativo."
fi

# 6. Instalar e configurar Watchdog
echo "üê∂ Instalando e configurando Watchdog..."
if rpm -q watchdog >/dev/null 2>&1; then
    echo "‚úÖ Watchdog j√° est√° instalado."
else
    sudo dnf install -y watchdog
    echo "‚úÖ Watchdog instalado."
fi

echo "‚öôÔ∏è  Habilitando e iniciando o servi√ßo Watchdog..."
if ! sudo systemctl is-enabled --quiet watchdog.service; then
    sudo systemctl enable watchdog.service
    echo "   Servi√ßo Watchdog habilitado."
else
    echo "   Servi√ßo Watchdog j√° estava habilitado."
fi

if ! sudo systemctl is-active --quiet watchdog.service; then
    sudo systemctl start watchdog.service
    echo "   Servi√ßo Watchdog iniciado."
else
    echo "   Servi√ßo Watchdog j√° estava ativo."
fi



echo "---------------------------------------------------------------------"
echo "‚úÖ Docker e Watchdog configurados com sucesso!"
echo "---------------------------------------------------------------------"